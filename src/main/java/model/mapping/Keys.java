/**
 * This class is generated by jOOQ
 */
package model.mapping;


import javax.annotation.Generated;

import model.mapping.tables.LoggingTable;
import model.mapping.tables.RecipeInstructionTable;
import model.mapping.tables.RecipeTable;
import model.mapping.tables.UserAttemptTable;
import model.mapping.tables.UserTable;
import model.mapping.tables.records.LoggingRecord;
import model.mapping.tables.records.RecipeInstructionRecord;
import model.mapping.tables.records.RecipeRecord;
import model.mapping.tables.records.UserAttemptRecord;
import model.mapping.tables.records.UserRecord;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>vegan_kitchen_api</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final Identity<RecipeRecord, Integer> IDENTITY_RECIPE = Identities0.IDENTITY_RECIPE;
	public static final Identity<RecipeInstructionRecord, Integer> IDENTITY_RECIPE_INSTRUCTION = Identities0.IDENTITY_RECIPE_INSTRUCTION;
	public static final Identity<UserRecord, Integer> IDENTITY_USER = Identities0.IDENTITY_USER;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<LoggingRecord> KEY_LOGGING_USER_ID = UniqueKeys0.KEY_LOGGING_USER_ID;
	public static final UniqueKey<LoggingRecord> KEY_LOGGING_SESSION_ID = UniqueKeys0.KEY_LOGGING_SESSION_ID;
	public static final UniqueKey<RecipeRecord> KEY_RECIPE_PRIMARY = UniqueKeys0.KEY_RECIPE_PRIMARY;
	public static final UniqueKey<RecipeRecord> KEY_RECIPE_RECIPE_ID = UniqueKeys0.KEY_RECIPE_RECIPE_ID;
	public static final UniqueKey<RecipeInstructionRecord> KEY_RECIPE_INSTRUCTION_PRIMARY = UniqueKeys0.KEY_RECIPE_INSTRUCTION_PRIMARY;
	public static final UniqueKey<RecipeInstructionRecord> KEY_RECIPE_INSTRUCTION_INSTRUCTION_ID = UniqueKeys0.KEY_RECIPE_INSTRUCTION_INSTRUCTION_ID;
	public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;
	public static final UniqueKey<UserRecord> KEY_USER_USER_ID = UniqueKeys0.KEY_USER_USER_ID;
	public static final UniqueKey<UserRecord> KEY_USER_USER_NAME = UniqueKeys0.KEY_USER_USER_NAME;
	public static final UniqueKey<UserRecord> KEY_USER_EMAIL = UniqueKeys0.KEY_USER_EMAIL;
	public static final UniqueKey<UserAttemptRecord> KEY_USER_ATTEMPT_USER_ID = UniqueKeys0.KEY_USER_ATTEMPT_USER_ID;
	public static final UniqueKey<UserAttemptRecord> KEY_USER_ATTEMPT_SESSION_ID = UniqueKeys0.KEY_USER_ATTEMPT_SESSION_ID;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------


	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		public static Identity<RecipeRecord, Integer> IDENTITY_RECIPE = createIdentity(RecipeTable.RECIPE, RecipeTable.RECIPE.RECIPE_ID);
		public static Identity<RecipeInstructionRecord, Integer> IDENTITY_RECIPE_INSTRUCTION = createIdentity(RecipeInstructionTable.RECIPE_INSTRUCTION, RecipeInstructionTable.RECIPE_INSTRUCTION.INSTRUCTION_ID);
		public static Identity<UserRecord, Integer> IDENTITY_USER = createIdentity(UserTable.USER, UserTable.USER.USER_ID);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<LoggingRecord> KEY_LOGGING_USER_ID = createUniqueKey(LoggingTable.LOGGING, LoggingTable.LOGGING.USER_ID);
		public static final UniqueKey<LoggingRecord> KEY_LOGGING_SESSION_ID = createUniqueKey(LoggingTable.LOGGING, LoggingTable.LOGGING.SESSION_ID);
		public static final UniqueKey<RecipeRecord> KEY_RECIPE_PRIMARY = createUniqueKey(RecipeTable.RECIPE, RecipeTable.RECIPE.RECIPE_ID);
		public static final UniqueKey<RecipeRecord> KEY_RECIPE_RECIPE_ID = createUniqueKey(RecipeTable.RECIPE, RecipeTable.RECIPE.RECIPE_ID);
		public static final UniqueKey<RecipeInstructionRecord> KEY_RECIPE_INSTRUCTION_PRIMARY = createUniqueKey(RecipeInstructionTable.RECIPE_INSTRUCTION, RecipeInstructionTable.RECIPE_INSTRUCTION.INSTRUCTION_ID);
		public static final UniqueKey<RecipeInstructionRecord> KEY_RECIPE_INSTRUCTION_INSTRUCTION_ID = createUniqueKey(RecipeInstructionTable.RECIPE_INSTRUCTION, RecipeInstructionTable.RECIPE_INSTRUCTION.INSTRUCTION_ID);
		public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = createUniqueKey(UserTable.USER, UserTable.USER.USER_ID);
		public static final UniqueKey<UserRecord> KEY_USER_USER_ID = createUniqueKey(UserTable.USER, UserTable.USER.USER_ID);
		public static final UniqueKey<UserRecord> KEY_USER_USER_NAME = createUniqueKey(UserTable.USER, UserTable.USER.USER_NAME);
		public static final UniqueKey<UserRecord> KEY_USER_EMAIL = createUniqueKey(UserTable.USER, UserTable.USER.EMAIL);
		public static final UniqueKey<UserAttemptRecord> KEY_USER_ATTEMPT_USER_ID = createUniqueKey(UserAttemptTable.USER_ATTEMPT, UserAttemptTable.USER_ATTEMPT.USER_ID);
		public static final UniqueKey<UserAttemptRecord> KEY_USER_ATTEMPT_SESSION_ID = createUniqueKey(UserAttemptTable.USER_ATTEMPT, UserAttemptTable.USER_ATTEMPT.SESSION_ID);
	}
}
